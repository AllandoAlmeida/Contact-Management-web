generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String              @id @default(uuid())
  name      String
  username  String
  password  String
  createdAt DateTime            @default(now())
  updatedAt DateTime?           @updatedAt
  isActive  Boolean             @default(true)
  phones    Phone[]
  emails    Email[]
  contacts  ContactToCustomer[]

  @@map(name: "customers")
}

model Contact {
  id         String              @id @default(uuid())
  name       String
  zidCode    String
  street     String
  complement String
  district    String
  locality   String
  state      String
  createdAt  DateTime            @default(now()) @map(name: "createdAt")
  updated    DateTime?           @updatedAt @map(name: "updated")
  isActive   Boolean             @default(true)
  phones     Phone[]
  emails     Email[]
  customers  ContactToCustomer[]

  @@map(name: "contacts")
}

model ContactToCustomer {
  id         String   @id @default(uuid())
  customerId String
  contactId  String
  assignedAt DateTime @default(now())

  customer Customer @relation(fields: [customerId], references: [id])
  contact  Contact  @relation(fields: [contactId], references: [id])

  @@map(name: "contactToCustomer")
}

model Phone {
  id         String    @id @default(uuid())
  telephone  String 
  customerId String?
  contactId  String?
  customer   Customer? @relation(fields: [customerId], references: [id])
  contact    Contact?  @relation(fields: [contactId], references: [id])

  @@map(name: "phones")
}

model Email {
  id         String    @id @default(uuid())
  email      String
  customerId String?
  contactId  String?
  customer   Customer? @relation(fields: [customerId], references: [id])
  contact    Contact?  @relation(fields: [contactId], references: [id])

  @@map(name: "emails")
}
